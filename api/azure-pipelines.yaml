#Azure CI pipeline

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - api/*

pool:
  name: Linux Nodes

variables:
  - group: cdefense

jobs:
  - job: Build_Scan_Push
    displayName: Build, Scan and Push
    steps:
      - task: Bash@3
        displayName: 'Download CDefense binary'
        inputs:
          targetType: 'inline'
          script: 'curl https://raw.githubusercontent.com/CloudDefenseAI/cd/master/latest/cd-latest-linux-x64.tar.gz > /tmp/cd-latest-linux-x64.tar.gz && tar -C /tmp -xzf /tmp/cd-latest-linux-x64.tar.gz && chmod +x /tmp/cdefense'

      - task: Bash@3
        displayName: 'Run CDefense SAST Scan'
        inputs:
          targetType: 'inline'
          script: '/tmp/cdefense sast --lang=node --project-name="Recon API" --api-key=$(cdefenseAPIkey) --path=$(Build.SourcesDirectory)/api'
        continueOnError: true

      - task: Docker@2
        displayName: Build Container
        inputs:
          containerRegistry: 'Ascendum ACR'
          repository: $(Build.Repository.Name)_$(Build.SourceBranchName)_recon-api
          command: build
          Dockerfile: 'api/Dockerfile'
          tags: |
            $(Build.SourceVersion)

      - task: Bash@3
        displayName: 'Run CDefense Container Scan'
        inputs:
          targetType: 'inline'
          script: '/tmp/cdefense container --api-key=$(cdefenseAPIKey) --image-name=ascendum.azurecr.io/$(Build.Repository.Name)_$(Build.SourceBranchName)_recon-api:$(Build.SourceVersion) --project-name="Recon API - Docker"'

      - task: Docker@2
        displayName: Push Container
        inputs:
          containerRegistry: 'Ascendum ACR'
          repository: $(Build.Repository.Name)_$(Build.SourceBranchName)_recon-api
          command: push
          tags: |
            $(Build.SourceVersion)
