#Azure CI pipeline

trigger:
  branches:
    include:
      - cddefense_sast
  paths:
    include:
      - api/*
variables:
  - group: cdefense
  - name: cdefenceAPIKey

jobs:
  - job: Cloud_Defense_SAST_Scan
    continueOnError: true
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        dotnet5.0.x:
          dotnet.version: '5.0.x'
    steps:
      - task: UseDotNet@2
        inputs:
          version: '$(dotnet.version)'
        displayName: 'Use Dotnet $(dotnet.version)'
      - script: |
          curl https://raw.githubusercontent.com/CloudDefenseAI/cd/master/latest/cd-latest-linux-x64.tar.gz > /tmp/cd-latest-linux-x64.tar.gz && tar -C /tmp -xzf /tmp/cd-latest-linux-x64.tar.gz && chmod +x /tmp/cdefense
          /tmp/cdefense sast --lang=dotnet --project-name=recon-api --api-key=$(cdefenseAPIkey) --path=$(Build.SourcesDirectory)/api
        continueOnError: true

  - job: Build_Artifacts
    continueOnError: true

    steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'Ascendum ACR'
          repository: $(Build.Repository.Name)_$(Build.SourceBranchName)_recon-api
          command: 'build'
          Dockerfile: 'api/Dockerfile'
          tags: |
            $(Build.SourceVersion)

      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            curl https://raw.githubusercontent.com/CloudDefenseAI/cd/master/latest/cd-latest-linux-x64.tar.gz > 66i && chmod +x $(System.DefaultWorkingDirectory)/api/cdefense
            $(System.DefaultWorkingDirectory)/api/cdefense container --api-key=$(cdefenseAPIkey) --image-name=$(Build.Repository.Name)_$(Build.SourceBranchName)_recon-api:$(Build.SourceVersion) --project-name=recon-api-docker

      - task: Docker@2
        inputs:
          containerRegistry: 'Ascendum ACR'
          repository: $(Build.Repository.Name)_$(Build.SourceBranchName)_recon-api
          command: 'Push'
          Dockerfile: 'api/Dockerfile'
          tags: |
            $(Build.SourceVersion)
