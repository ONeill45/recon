#Azure CI pipeline

trigger:
  branches:
    include:
      - cddefense_sast
  paths:
    include:
      - app/*

pool:
  name: Linux Nodes

variables:
  - group: cdefense
  - name: cdefenceAPIKey

jobs:
  - job: Build_Scan_Push
    displayName: Build, Scan and Push
    steps:
      - task: Bash@3
        displayName: 'Download CDefense Binary'
        inputs:
          targetType: 'inline'
          script: curl https://raw.githubusercontent.com/CloudDefenseAI/cd/master/latest/cd-latest-linux-x64.tar.gz > /tmp/cd-latest-linux-x64.tar.gz && tar -C /tmp -xzf /tmp/cd-latest-linux-x64.tar.gz && chmod +x /tmp/cdefense

      - task: Bash@3
        displayName: 'Run CDefense SAST Scan'
        inputs:
          targetType: 'inline'
          script: '/tmp/cdefense sast --lang=dotnet --project-name=recon-app --api-key=$(cdefenseAPIkey) --path=$(Build.SourcesDirectory)/app'

      - task: Docker@2
        inputs:
          containerRegistry: 'Ascendum ACR'
          repository: $(Build.Repository.Name)_$(Build.SourceBranchName)_recon-app
          command: 'build'
          Dockerfile: 'app/Dockerfile'
          tags: |
            $(Build.SourceVersion)

      - task: Bash@3
        displayName: 'Run CDefense Container Scan'
        inputs:
          targetType: 'inline'
          script: '/tmp/cdefense container --api-key=$(cdefenseAPIkey) --image-name=ascendum.azurecr.io/$(Build.Repository.Name)_$(Build.SourceBranchName)_recon-app:$(Build.SourceVersion) --project-name=recon-app-docker'
          failOnStderr: false

      - task: Docker@2
        displayName: Push Container
        inputs:
          containerRegistry: 'Ascendum ACR'
          repository: $(Build.Repository.Name)_$(Build.SourceBranchName)_recon-app
          command: 'push'
          tags: |
            $(Build.SourceVersion)
